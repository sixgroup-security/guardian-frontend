/**
 * This file is part of Guardian.
 *
 * Guardian is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Guardian is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with MyAwesomeProject. If not, see <https://www.gnu.org/licenses/>.
 *
 * @author Lukas Reiter
 * @copyright Copyright (C) 2024 Lukas Reiter
 * @license GPLv3
 */

import React from "react";
import {
  Dialog,
  DialogContent,
  DialogActions,
  Button,
  IconButton,
  AppBar,
  Typography,
  Toolbar,
} from "@mui/material";
import CloseIcon from "@mui/icons-material/Close";
import { queryKeyVulnerabilityTemplates } from "../../../../models/vulnerabilityTemplate";
import { URL_VULNERABILITY_TEMPLATES_PREFIX } from "../../../../models/testProcedure";
import AddVulnerabilitiesForm from "./AddVulnerabilitiesForm";

interface AddVulnerabilitiesDialog {
  open: boolean;
  // The procedure's UUID
  procedureId: string;
  // List of vulnerabilities already associated with the given procedure.
  vulnerabilityIds: string[];
  // The event handler to close the dialog.
  onClose: () => void;
}

const AddVulnerabilitiesDialog: React.FC<AddVulnerabilitiesDialog> = React.memo(
  (props) => {
    const { procedureId, vulnerabilityIds } = props;

    // Used by the PagesDataGridv2 component to only display vulnereabilities that haven't been associated with the current
    // procedure yet.
    const filterUsedRows = React.useCallback(
      (row: any) => !vulnerabilityIds.includes(row.id),
      [vulnerabilityIds]
    );

    return (
      <Dialog open={props.open} disableEscapeKeyDown maxWidth="xl" fullWidth>
        <AppBar sx={{ position: "relative" }}>
          <Toolbar>
            <IconButton
              edge="start"
              color="inherit"
              onClick={props.onClose}
              aria-label="close"
            >
              <CloseIcon />
            </IconButton>
            <Typography sx={{ ml: 2, flex: 1 }} variant="h6" component="div">
              Add vulnerability to procedure
            </Typography>
          </Toolbar>
        </AppBar>
        <DialogContent>
          <AddVulnerabilitiesForm
            procedureId={procedureId}
            submissionBaseUrl={URL_VULNERABILITY_TEMPLATES_PREFIX}
            submissionBaseQueryKey={queryKeyVulnerabilityTemplates}
            filterUsedRows={filterUsedRows}
            style={{ height: 350 }}
          />
        </DialogContent>
        <DialogActions>
          <Button onClick={props.onClose} startIcon={<CloseIcon />}>
            Close
          </Button>
        </DialogActions>
      </Dialog>
    );
  }
);

export default AddVulnerabilitiesDialog;
