/**
 * This file is part of Guardian.
 *
 * Guardian is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Guardian is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Guardian. If not, see <https://www.gnu.org/licenses/>.
 *
 * @author Lukas Reiter
 * @copyright Copyright (C) 2024 Lukas Reiter
 * @license GPLv3
 */

import React from "react";
import { useQuery } from "../../../../util/hooks/tanstack/useQuery";
import {
  COLUMN_DEFINITION,
  VulnerabilityRead,
} from "../../../../models/vulnerability";
import { QueryKey } from "@tanstack/react-query";
import {
  renderCellRatings,
  renderCellVulnerabilityTemplate,
  valueGetterRatings,
  valueGetterVulnerabilityTemplate,
} from "../../../../pages/Common";
import { GridColDef } from "@mui/x-data-grid";
import PagesDataGrid from "../../../data/datagrid/PagesDataGrid";
import { useQueryUserMe } from "../../../../util/hooks/tanstack/useQueryUserMe";
import { MainPages } from "../../../../models/enums";

interface VulnerabilityDataGridProps {
  queryUrl: string;
  queryKey: QueryKey;
}

const renderCell = (column: GridColDef) =>
  renderCellVulnerabilityTemplate(column) ?? renderCellRatings(column);

const valueGetter = (column: GridColDef) =>
  valueGetterVulnerabilityTemplate(column) ?? valueGetterRatings(column);

const VulnerabilityDataGrid = React.memo(
  (props: VulnerabilityDataGridProps) => {
    const query = useQuery({
      path: props.queryUrl,
      queryKey: props.queryKey,
      convertFn: (x) => x.map((i) => new VulnerabilityRead(i)),
    });
    const user = useQueryUserMe();

    return (
      <PagesDataGrid
        page={MainPages.Vulnerability}
        user={user.data!}
        columns={COLUMN_DEFINITION}
        isLoading={query.isLoading}
        renderCellFn={renderCell}
        getCellValueFn={valueGetter}
        rows={query.data}
      />
    );
  }
);

export default VulnerabilityDataGrid;
